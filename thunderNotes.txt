// To compile wasm version of giac for node:
Open in dev container, then from /workspaces/ThunderGiac:
    ./gradlew downloadEmsdk installEmsdk activateEmsdk                     needed first time
    ./gradlew createGiacWasmJsForNode                                      to actually create .wasm and wrapper files.

Troubleshooting: if you get error 
            /usr/bin/env: 'sh\r': No such file or directory
    it means gradlew has windows line endings. Install dos2unix and then use dos2unix gradlew.
        
Output is in /workspaces/ThunderGiac/build/binaries/giacggb.wasm/
From here, run 
    node nodetoy.js

nodetoy.js can test either the non-inline version (giac.node.wasm-loader.js + giacggb.wasm), or the inline version (just giac.node.wasm.js).
For use in other node-based systems just these files need to be copied.

If rebuilding, after changing, eg, alg_ext.cc, need to erase ALL files from build/binaries/giacggb.wasm/
                then run ./gradlew createGiacWasmJsForNode again.

To make available inside windows npm builds, 
        from build/binaries/giacggb.wasm/
        cp giac.node.wasm.js ../../../nodePackage/out/compiledWasm/

Then can test using 'giac' command from windows powershell.
    Can nominally get version from inside giac with    version() but this seems to be hard-coded in to build.gradle and doesn't seem to change.
    I've edited to a Thunder version starting at Thunder.1.0.0 until upstream actually changes it.

// To debug minigiac, a terminal-based c program:
On bottom bar of vscode choose
    kit as GCC 11.2.0 x86_64...
    build variant to CMake[Debug]
    build target / debug target to [minigiac] 
    add breakpoints to, eg, minigiac.cc
    click bug icon on bottom bar to start debugging

terminal shows giac. breakpoints & debugging work.
gcc output is in build/ folder. Executable is minigiac.






///////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Merging from upstream
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
// did on 10/1/22
git remote add upstream https://github.com/geogebra/giac.git             (should be unnecessary after doing this once)
git branch -r                                                            lists remote branches. Should see upstream/master  
git fetch upstream                                                       fetches metadata for examining in, eg, gitex                           
git checkout wasm-from-node                                  my local working branch. Want to add upstream changes to this branch.
git branch wasm-from-node-backup                             just in case
git pull upstream master                                                 downloads and tries to automerge
            /// gave merge conflict errors, for alg_ext.cc in this case. 
git log --merge                                                          shows commits giving merge conflict.
// open problem file in vscode (alg_ext.cc in this case.) Accept one version of conflict, marked with >>>>>>. Save it.
git add .\src\giac\cpp\alg_ext.cc                                        adds conflict file to commits
git commit -m "Merged stuff and resolved annoying conflict"              or do commit in gitex, with message

